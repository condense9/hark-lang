service: tryit

frameworkVersion: ">=1.1.0 <2.0.0"

# https://www.serverless.com/framework/docs/providers/aws/guide/packaging/#artifact
package:
  artifact: dist.zip

layers:
  src:
    package:
      artifact: srclayer.zip
    compatibleRuntimes: [ python3.8 ]


provider:
  name: aws
  runtime: python3.8
  region: eu-west-2
  environment:
    TL_REGION: ${self:provider.region}
    RESOURCE_PREFIX: ${self:service}-${opt:stage, self:provider.stage}-
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}-teal-sessions
    USE_LIVE_AWS: "foo"  # setting this to "yes" breaks AWS...?
    RESUME_FN_NAME: ${self:provider.environment.RESOURCE_PREFIX}resume

  iamRoleStatements:

    # Allow access to the session database
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:DescribeTable
      Resource:
        Fn::GetAtt: [DataTable, Arn]

    # Allow lambdas to invoke resume
    - Effect: Allow
      Action:
        - lambda:InvokeFunction
      Resource:
        - arn:aws:lambda:${self:provider.region}:*:function:${self:provider.environment.RESOURCE_PREFIX}resume


functions:
  set_exe:
    handler: teal_lang.executors.awslambda.set_exe

  resume:
    handler: teal_lang.executors.awslambda.resume
    layers:
      - { Ref: SrcLambdaLayer }

  new:
    handler: teal_lang.executors.awslambda.new_apigw
    layers:
      - { Ref: SrcLambdaLayer }
    # https://www.serverless.com/blog/cors-api-gateway-survival-guide/
    events:
      - http:
          path: new
          method: post
          cors: true

  getoutput:
    handler: teal_lang.executors.awslambda.getoutput_apigw
    events:
      - http:
          path: getoutput
          method: post
          cors: true

  getevents:
    handler: teal_lang.executors.awslambda.getevents_apigw
    events:
      - http:
          path: getevents
          method: post
          cors: true

  version:
    handler: teal_lang.executors.awslambda.version_apigw
    events:
      - http:
          path: version
          method: post
          cors: true



resources:
  Resources:

    DataTable:
      Type: 'AWS::DynamoDB::Table'
      ## Optional - uncomment this:
      # DeletionPolicy: Retain
      Properties:
        TableName: ${self:provider.environment.DYNAMODB_TABLE}

        TimeToLiveSpecification:
          AttributeName: expires_on
          Enabled: true

        AttributeDefinitions:
          - AttributeName: session_id
            AttributeType: S
        KeySchema:
          - AttributeName: session_id
            KeyType: HASH

        ## Optional - uncomment this:
        # ProvisionedThroughput:
        #   ReadCapacityUnits: 1
        #   WriteCapacityUnits: 1
        BillingMode: PAY_PER_REQUEST
