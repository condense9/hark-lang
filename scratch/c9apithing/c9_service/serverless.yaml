# https://github.com/serverless/examples/tree/master/aws-python-rest-api-with-pynamodb

service: test

frameworkVersion: ">=1.1.0 <2.0.0"

plugins:
  - serverless-localstack
#   - serverless-python-requirements

provider:
  name: aws
  runtime: python3.8
  region: eu-west-2
  environment:
    RESOURCE_PREFIX: ${self:service}-${opt:stage, self:provider.stage}
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}-c9-sessions
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:DescribeTable
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"


# https://github.com/localstack/serverless-localstack
custom:
  localstack:
    stages:
      - local
      - dev
    host: http://localhost  # optional - LocalStack host to connect to
    autostart: true  # optional - start LocalStack in Docker on Serverless deploy
    lambda:
      # Improves performance
      mountCode: True
    docker:
      # Enable this flag to run "docker ..." commands as sudo
      sudo: False

package:
  exclude:
    - node_modules/**
    - .idea/**
    - .requirements/**
    - env/**
    - README.md
    - package.json
    - package-lock.json
    - requirements.txt


functions:

  setexe:
    handler: src/c9service.setexe
    events:
      - http:
          path: setexe
          method: post
          cors: true
      # - sqs:
      #     arn:
      #       Fn::GetAtt:
      #         - MountainsTest
      #         - Arn

  call:
    handler: src/c9service.callf
    events:
      - http:
          path: callf
          method: post
          cors: true

  resume:
    handler: src/c9service.resume
    events:
      - http:
          path: resume
          method: post
          cors: true


resources:
  Resources:

    # MountainsTest:
    #   Type: "AWS::SQS::Queue"
    #   Properties:
    #     QueueName: "MountainsTest"

    TodosDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
        AttributeDefinitions:
          - AttributeName: todo_id
            AttributeType: S
        KeySchema:
          - AttributeName: todo_id
            KeyType: HASH
        # ProvisionedThroughput:
        #   ReadCapacityUnits: 1
        #   WriteCapacityUnits: 1
        BillingMode: PAY_PER_REQUEST
